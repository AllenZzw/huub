name: Run Tests

on:
  push:
    branches:
      - "develop"
  pull_request:
  workflow_dispatch:

env:
  RUST_CHANNEL: "stable"
  RUST_TEST_CHANNEL: "nightly"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: moonrepo/setup-rust@v0
        with:
          cache: false
          channel: ${{ env.RUST_TEST_CHANNEL }}
      - name: Install grcov
        uses: SierraSoftworks/setup-grcov@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run cargo test
        run: cargo test --locked
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
          RUSTDOCFLAGS: "-Cpanic=abort"
      - name: Collect covereage data
        run: grcov . --binary-path target/debug/deps/ -s . -t lcov --ignore-not-existing --ignore '../**' --ignore '/*' -o ./lcov.info
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lcov.info
  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain and codspeed
        uses: moonrepo/setup-rust@v0
        with:
          channel: ${{ env.RUST_CHANNEL }}
          cache-target: bench
          bins: cargo-codspeed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the benchmark target(s)
        run: cargo codspeed build --profile bench
      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain and clippy
        uses: moonrepo/setup-rust@v0
        with:
          channel: ${{ env.RUST_CHANNEL }}
          components: clippy
      - name: Run clippy
        run: cargo clippy --tests -- -D warnings
